version: "3"  # docker-compose 3.x的file format
services:
  discover:
    image: harbor.hfjy.com/cup-201906-07/discover:1.3-SNAPSHOT
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; java -Djava.security.egd=file:/dev/./urandom -jar /app/discover.jar'
    volumes: #卷映射
      - /data/logs/discover:/app/logs
    sysctls: #容器内核参数。
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000


  configCenter:
    image: harbor.hfjy.com/cup-201906-07/config:1.0-SNAPSHOT
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8001 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -jar /app/config.jar'
    volumes: #卷映射
      - /data/logs/config:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - discover
    env_file: #环境变量配置文件
      - ./project07.env

  gateway:
    image: harbor.hfjy.com/cup-201906-07/gateway:1.0-SNAPSHOT
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8002 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -jar /app/gateway.jar'
    volumes: #卷映射
      - /data/logs/gateway:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - configCenter
    env_file: #环境变量配置文件
      - ./project07.env

  controller1:
    image: harbor.hfjy.com/cup-201906-07/controller:1.0-SNAPSHOT
    container_name: controller1
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8002 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -jar /app/controller.jar'
    volumes: #卷映射
      - /data/logs/controller:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - configCenter
    env_file: #环境变量配置文件
      - ./project07.env

  controller2:
    image: harbor.hfjy.com/cup-201906-07/controller:1.0-SNAPSHOT
    container_name: controller2
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8002 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -Dserver_port=8006 -jar /app/controller.jar'
    volumes: #卷映射
      - /data/logs/controller:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - configCenter
    env_file: #环境变量配置文件
      - ./project07.env

  service1:
    image: harbor.hfjy.com/cup-201906-07/service:1.0-SNAPSHOT
    container_name: service1
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8002 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -jar /app/service.jar'
    volumes: #卷映射
      - /data/logs/service:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - configCenter
    env_file: #环境变量配置文件
      - ./project07.env

  service2:
    image: harbor.hfjy.com/cup-201906-07/service:1.0-SNAPSHOT
    container_name: service2
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8002 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -Dserver_port=8007 -jar /app/service.jar'
    volumes: #卷映射
      - /data/logs/service:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - configCenter
    env_file: #环境变量配置文件
      - ./project07.env

  service3:
    image: harbor.hfjy.com/cup-201906-07/service:1.0-SNAPSHOT
    container_name: service3
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8002 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -Dserver_port=8008 -jar /app/service.jar'
    volumes: #卷映射
      - /data/logs/service:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - configCenter
    env_file: #环境变量配置文件
      - ./project07.env

  service4:
    image: harbor.hfjy.com/cup-201906-07/service:1.0-SNAPSHOT
    container_name: service4
    network_mode: "host"
    entrypoint: sh -c 'export container_id=`head -1 /proc/self/cgroup|cut -d/ -f3|cut -c1-12`; /app/wait-for-it.sh localhost:8002 -t 0  -- java -Djava.security.egd=file:/dev/./urandom -Dserver_port=8009 -jar /app/service.jar'
    volumes: #卷映射
      - /data/logs/service:/app/logs
      - ./wait-for-it.sh:/app/wait-for-it.sh
    depends_on: #依赖的容器
      - configCenter
    env_file: #环境变量配置文件
      - ./project07.env