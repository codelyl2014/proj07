log:
  level: info
  path:  /app/logs/${container_id:${HOSTNAME:localhost}}

server:
  port: 8003
spring:
  application:
    name: gateway
  cloud:        # spring cloud gateway 路由配置方式
    gateway:
      metrics:
        enabled: true
      httpclient:
        connect-timeout: 5000
        response-timeout: 10000
        pool: #pool默认的type是elastic，如果是fixed的话，还可以指定maxConnections及acquireTimeout参数
          max-connections: 5000
      discovery:      #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator:      #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
          enabled: true
          lower-case-service-id: true #启用小写service-id访问，否则默认需大写访问
      routes:
        - id: baidu
          uri: http://baidu.com
          predicates:
            - Path=/baidu/**
          filters:
            - RedirectTo=302, http://sogou.com #当访问/baidu/**的时候会被重定向到http://sogou.com
        - id: 163                     #网关路由到网易官网
          uri: http://www.163.com/
          predicates:
            - Path=/163/**  #路径判断器，另外还有After,Before,Between,Cookie,Header,Host,Method等等
          filters: #路由过滤器,针对serviceId为163的进行限流
            - name: Retry #重试过滤器
              args:
                retries: 1
                statuses: BAD_GATEWAY #当出现这些状态时重试
      default-filters: #默认的请求所有请求均应用这些filter
        - AddRequestHeader=X-Request-Test, hfjy #默认的过滤器，为所有转化的请求增加请求头
        - AddRequestParameter=foo, bar  #为所有请求增加foo=bar参数
        - AddResponseHeader=X-Response-Foo, Bar  #为所有响应增加响应头
        - RemoveRequestHeader=X-Request-Foo #移除请求头 X-Request-Foo
        - name: Hystrix #为代理增加熔断机制,当被代理的请求出现异常则会降级转发到下方定义的/handle/error地址中。
          args:
            name: defaultFallbackCmd
            fallbackUri: forward:/handle/error  #当hystrix fallback被调用则转发到这个地址,fallbackUri要以forward开头
